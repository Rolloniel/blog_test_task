(function(c,a){if(typeof define==="function"&&define.amd){define([],a)}else{if(typeof exports!=="undefined"){a()}else{var b={exports:{}};a();c.bootstrapTableTreegrid=b.exports}}})(this,function(){!function(d){d.extend(d.fn.bootstrapTable.defaults,{treeShowField:null,idField:"id",parentIdField:"pid",rootParentId:null,onGetNodes:function i(m,l){var k=this;var j=[];d.each(l,function(n,o){if(m[k.options.idField]===o[k.options.parentIdField]){j.push(o)}});return j},onCheckRoot:function f(l,k){var j=this;return j.options.rootParentId===l[j.options.parentIdField]||!l[j.options.parentIdField]}});var a=d.fn.bootstrapTable.Constructor,h=a.prototype.init,e=a.prototype.initRow,g=a.prototype.initHeader,c=null;a.prototype.init=function(){c=this.options.rowStyle;h.apply(this,Array.prototype.slice.apply(arguments))};a.prototype.initHeader=function(){var k=this;g.apply(k,Array.prototype.slice.apply(arguments));var j=k.options.treeShowField;if(j){d.each(this.header.fields,function(l,m){if(j===m){k.treeEnable=true;return false}})}};var b=function b(r,q,m,l){var o=this;var j=o.options.onGetNodes.apply(o,[r,m]);r._nodes=j;l.append(e.apply(o,[r,q,m,l]));var p=j.length-1;for(var n=0;n<=p;n++){var k=j[n];k._level=r._level+1;k._parent=r;if(n===p){k._last=1}o.options.rowStyle=function(v,s){var u=c.apply(o,Array.prototype.slice.apply(arguments));var w=v[o.options.idField]?v[o.options.idField]:0;var t=v[o.options.parentIdField]?v[o.options.parentIdField]:0;u.classes=[u.classes||"","treegrid-"+w,"treegrid-parent-"+t].join(" ");return u};b.apply(o,[k,d.inArray(k,m),m,l])}};a.prototype.initRow=function(l,j,m,n){var k=this;if(k.treeEnable){if(k.options.onCheckRoot.apply(k,[l,m])){if(l._level===undefined){l._level=0}k.options.rowStyle=function(r,p){var q=c.apply(k,Array.prototype.slice.apply(arguments));var o=r[k.options.idField]?r[k.options.idField]:0;q.classes=[q.classes||"","treegrid-"+o].join(" ");return q};b.apply(k,[l,j,m,n]);return true}return false}return e.apply(k,Array.prototype.slice.apply(arguments))}}(jQuery)});